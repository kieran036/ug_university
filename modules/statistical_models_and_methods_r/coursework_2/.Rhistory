mse_ridge1 <-  mean((ridge.prediction1. - select(test, CreditScore))^2)
mse_ridge2 <-  mean((ridge.prediction2. - select(test, CreditScore))^2)
mse_ridge1
mse_ridge2
fit.1 = lm(CreditScore ~ ., data = train)
x = model.matrix(fit.1)
y = select(train, CreditScore)
y = as.matrix(y)
ridge = glmnet(x, y, alpha = 0)
ridge.cv = cv.glmnet(x, y, alpha = 0)
ridge.cv$lambda.min
ridge.cv$lambda.1se
plot(ridge.cv)
fit.xnew = lm(CreditScore ~ ., data = test)
fit.xnew = model.matrix(fit.xnew)
ridge.prediction1. = predict(ridge.cv, fit.xnew, s = "lambda.1se")
ridge.prediction2. = predict(ridge.cv, fit.xnew, s = "lambda.min")
mse_ridge1 <-  mean((ridge.prediction1. - select(test, CreditScore))^2)
mse_ridge2 <-  mean((ridge.prediction2. - select(test, CreditScore))^2)
mse_ridge1
mse_ridge2
fit.1 = lm(CreditScore ~ ., data = train)
x = model.matrix(fit.1)
y = select(train, CreditScore)
y = as.matrix(y)
ridge = glmnet(x, y, alpha = 0)
ridge.cv = cv.glmnet(x, y, alpha = 0)
ridge.cv$lambda.min
ridge.cv$lambda.1se
plot(ridge.cv)
fit.xnew = lm(CreditScore ~ ., data = test)
fit.xnew = model.matrix(fit.xnew)
ridge.prediction1. = predict(ridge.cv, fit.xnew, s = "lambda.1se")
ridge.prediction2. = predict(ridge.cv, fit.xnew, s = "lambda.min")
mse_ridge1 <-  mean((ridge.prediction1. - select(test, CreditScore))^2)
mse_ridge2 <-  mean((ridge.prediction2. - select(test, CreditScore))^2)
mse_ridge1
mse_ridge2
fit.1 = lm(CreditScore ~ ., data = train)
x = model.matrix(fit.1)
y = select(train, CreditScore)
y = as.matrix(y)
ridge = glmnet(x, y, alpha = 0)
ridge.cv = cv.glmnet(x, y, alpha = 0)
ridge.cv$lambda.min
ridge.cv$lambda.1se
plot(ridge.cv)
fit.xnew = lm(CreditScore ~ ., data = test)
fit.xnew = model.matrix(fit.xnew)
ridge.prediction1. = predict(ridge.cv, fit.xnew, s = "lambda.1se")
ridge.prediction2. = predict(ridge.cv, fit.xnew, s = "lambda.min")
mse_ridge1 <-  mean((ridge.prediction1. - select(test, CreditScore))^2)
mse_ridge2 <-  mean((ridge.prediction2. - select(test, CreditScore))^2)
mse_ridge1
mse_ridge2
fit.1 = lm(CreditScore ~ ., data = test)
x = model.matrix(fit.1)
y = select(train, CreditScore)
y = as.matrix(y)
ridge = glmnet(x, y, alpha = 0)
setwd("~/Documents/Maths/R/Coursework 2")
library(car)
library(dplyr)
library(ggplot2)
library(leaps)
library(ElemStatLearn)
library(glmnet)
train = read.table("Train.txt",header = T)
test  = read.table("Test.txt",header = T)
train = filter( train, !is.na(Status), !is.na(Duration), !is.na(History), !is.na(Purpose), !is.na(Amount), !is.na(Savings), !is.na(Employment), !is.na(Disposable), !is.na(Personal), !is.na(OtherParties), !is.na(Residence), !is.na(Property), !is.na(Age), !is.na(Plans), !is.na(Housing), !is.na(Existing), !is.na(Job), !is.na(Dependants), !is.na(Telephone), !is.na(Foreign), !is.na(CreditScore))
test = filter( test, !is.na(Status), !is.na(Duration), !is.na(History), !is.na(Purpose), !is.na(Amount), !is.na(Savings), !is.na(Employment), !is.na(Disposable), !is.na(Personal), !is.na(OtherParties), !is.na(Residence), !is.na(Property), !is.na(Age), !is.na(Plans), !is.na(Housing), !is.na(Existing), !is.na(Job), !is.na(Dependants), !is.na(Telephone), !is.na(Foreign), !is.na(CreditScore))
str(train)
str(test)
train1 <- train[c(2, 5, 8, 11, 13, 16, 18, 21)]
scatterplotMatrix(train1[,1:8], pch = ".", smoother = FALSE, main = "Pairwise scatterplot of continuous variables with regression line")
#Whilst observing the affect of the CreditScore individually against the variables, from the pairwise scatter plot we can see a obvious strong negative correlation between Duration and again with Amount. There is a weaker correlation when considering Existing and even weaker correlation when looking at Age, albeit both being a positive correlation. Disposable has an even weaker negative correlation to those mentioned so far. Variables named Residence and Dependants have very little correlation that it is not evident through the plot.
Status1 <- factor(train$Status, levels = c("Negative", "None", "Small", "Large"))
History1 <- factor(train$History, levels = c("A", "B", "C", "D", "E"))
Purpose1 <- factor(train$Purpose, levels = c("NewCar", "UsedCar", "Other", "Furniture", "Televison", "Domestic", "Repairs", "Education", "Training", "Business"))
Savings1 <- factor(train$Savings, levels = c("Unknown", "Low", "Medium", "Large", "VeryLarge"))
Employment1 <- factor(train$Employment, levels = c("Unemployed", "Short", "Mdeium", "Long", "VeryLong"))
Personal1 <- factor(train$Personal, levels = c("M:DivSepMar", "F:DivSepMar", "M:Single", "F:Single"))
OtherParties1 <- factor(train$OtherParties, levels = c("None", "Coapp", "Guarantor"))
Property1 <- factor(train$Property, levels = c("House", "Savings", "Car", "None"))
Plans1 <- factor(train$Plans, levels = c("Bank", "Stores", "None"))
Housing1 <- factor(train$Housing, levels = c("Rent", "Own", "RentFree"))
Telephone1 <- factor(train$Telephone, levels = c("Yes", "No"))
Foreign1 <- factor(train$Foreign, levels = c("Yes", "No"))
plot(Status1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Status (Fig 1)", xlab = "Status", ylab = "CreditScore")
#Figure 1 shows that there is some steady positive correlation between CreditScore and Status, particularly if we temporarily ignore 'None'. This implies this factor should be in the model.
plot(History1, train$CreditScore, data = train, main = "Boxplot of CreditScore against History (Fig 2)", xlab = "History", ylab = "CreditScore")
plot(Purpose1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Purpose (Fig 3)", xlab = "Purpose", ylab = "CreditScore")
plot(Savings1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Savings (Fig 4)", xlab = "Savings", ylab = "CreditScore")
plot(Employment1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Employment (Fig 5)", xlab = "Employment", ylab = "CreditScore")
plot(Personal1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Personal (Fig 6)", xlab = "Personal", ylab = "CreditScore")
plot(OtherParties1, train$CreditScore, data = train, main = "Boxplot of CreditScore against OtherParties (Fig 7)", xlab = "OtherParties", ylab = "CreditScore")
plot(Property1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Property (Fig 8)", xlab = "Property", ylab = "CreditScore")
plot(Plans1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Plans (Fig 9)", xlab = "Plans", ylab = "CreditScore")
plot(Housing1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Housing (Fig 10)", xlab = "Status", ylab = "CreditScore")
plot(train$Job, train$CreditScore, data = train, main = "Boxplot of CreditScore against Job (Fig 11)", xlab = "Job", ylab = "CreditScore")
plot(Telephone1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Telephone (Fig 12)", xlab = "Telephone", ylab = "CreditScore")
plot(Foreign1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Foreign (Fig 13)", xlab = "Foreign", ylab = "CreditScore")
Full_Model <- lm(CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Existing + Job + Dependants + Telephone + Foreign, data = train)
predictions_FULL <- predict(Full_Model, newdata=select(test, -CreditScore))
MSE_Full_Model <- mean((predictions_FULL - select(test, CreditScore))^2)
MSE_Full_Model
AIC(Full_Model)
fit_Full <- lm(CreditScore ~ . , data = train)
fit_step_Full <- step(fit_Full)
fit_Null <- lm(CreditScore ~ 1 , data = train)
fit_step_Null <- step(fit_Null, scope = CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Existing + Job + Dependants + Telephone + Foreign)
predictions_Full <- predict(fit_step_Full, newdata=select(test, -CreditScore))
mse_step_Full <- mean((predictions_Full - select(test, CreditScore))^2)
predictions_Null <- predict(fit_step_Null, newdata=select(test, -CreditScore))
mse_step_Null <- mean((predictions_Full - select(test, CreditScore))^2)
mse_step_Full
mse_step_Null
Model_Stepwise <- lm (CreditScore ~ Status + Duration + Purpose + History + Savings + Personal + Foreign + Plans + OtherParties + Disposable + Amount + Housing + Telephone + Age, data = train)
AIC(Model_Stepwise)
a <- regsubsets(train$CreditScore ~ . , data = train, nvmax = 48)
summary.out <- summary(a)
summary.out
summary.out$cp
plot( a , scale = 'Cp')
plot( a , scale = 'bic')
Model_BestSubsetRegression_Cp_1 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Job + Telephone + Foreign, data = train)
Model_BestSubsetRegression_Cp_2 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Disposable + Personal + OtherParties + Age + Plans + Housing + Telephone + Foreign, data = train)
predictions_Model_BestSubsetRegression_Cp_1 <- predict(Model_BestSubsetRegression_Cp_1, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_1 <- mean((predictions_Model_BestSubsetRegression_Cp_1 - select(test, CreditScore))^2)
predictions_Model_BestSubsetRegression_Cp_2 <- predict(Model_BestSubsetRegression_Cp_2, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_2 <- mean((predictions_Model_BestSubsetRegression_Cp_2 - select(test, CreditScore))^2)
mse_Model_BestSubsetRegression_Cp_1
AIC(Model_BestSubsetRegression_Cp_1)
mse_Model_BestSubsetRegression_Cp_2
AIC(Model_BestSubsetRegression_Cp_2)
Model_BestSubsetRegression_bic_1 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Disposable + Personal + OtherParties + Plans + Housing + Telephone + Foreign, data = train)
Model_BestSubsetRegression_bic_2 <- lm(CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Disposable + Personal + OtherParties + Age + Plans + Housing + Telephone + Foreign, data = train)
predictions <- predict(Model_BestSubsetRegression_bic_1, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_bic_1 <- mean((predictions - select(test, CreditScore))^2)
predictions <- predict(Model_BestSubsetRegression_bic_2, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_bic_2 <- mean((predictions - select(test, CreditScore))^2)
mse_Model_BestSubsetRegression_bic_1
AIC(Model_BestSubsetRegression_bic_1)
mse_Model_BestSubsetRegression_bic_2
AIC(Model_BestSubsetRegression_bic_2)
anova(Model_BestSubsetRegression_bic_1, Model_BestSubsetRegression_bic_2)
fit.1 = lm(CreditScore ~ ., data = train)
x.1 = model.matrix(fit.1)
y.1 = select(train, CreditScore)
y.1 = as.matrix(y.1)
ridge = glmnet(x.1, y.1, alpha = 0)
ridge.cv = cv.glmnet(x.1, y.1, alpha = 0)
ridge.cv$lambda.min
ridge.cv$lambda.1se
plot(ridge.cv)
fit.xnew = lm(CreditScore ~ ., data = test)
fit.xnew = model.matrix(fit.xnew)
ridge.prediction1. = predict(ridge.cv, fit.xnew, s = "lambda.1se")
ridge.prediction2. = predict(ridge.cv, fit.xnew, s = "lambda.min")
mse_ridge1 <-  mean((ridge.prediction1. - select(test, CreditScore))^2)
mse_ridge2 <-  mean((ridge.prediction2. - select(test, CreditScore))^2)
mse_ridge1
mse_ridge2
Model_Best <- lm (CreditScore ~ Status + Duration + Purpose + History + Savings + Personal + Foreign + Plans + OtherParties + Disposable + Amount + Housing + Telephone + Age, data = train)
plot(Model_Best)
influencePlot(Model_Best, main = "Influence Plot")
qqPlot(Model_Best, main = "QQ-Plot")
hist(rstudent(Model_Best))
influenceIndexPlot(Model_Best, id.n = 3)
coef(Model_Best)
Model_Best <- lm (CreditScore ~ Status + Duration + Purpose + History + Savings + Personal + Foreign + Plans + OtherParties + Disposable + Amount + Housing + Telephone + Age, data = test)
prediction_Best <- predict(Model_Best, newdata = select(test, - CreditScore))
x.1 = select(test, CreditScore)
x.1 = as.matrix(x.1)
y.1 = as.matrix(prediction_Best)
plot(x.1, y.1, xlab = "Test CreditScore values", ylab = "Predicted CreditScore values", main = "Plot of predicted against true CreditScores values")
abline(0, 1)
t.test(x.1, y.1, paired = TRUE)
predict_data <- predict(Model_Best, newdata = select(test, -CreditScore))
true_data <- select(test,CreditScore)
risk_predict_data <- ifelse(predict_data < 500, 1, 0)
risk_true_data <- ifelse(true_data < 500, 1, 0)
sum(risk_predict_data == risk_true_data)
fit.1 = lm(CreditScore ~ ., data = train)
x.1 = model.matrix(fit.1)
y.1 = select(train, CreditScore)
y.1 = as.matrix(y.1)
ridge = glmnet(x.1, y.1, alpha = 0)
ridge.cv = cv.glmnet(x.1, y.1, alpha = 0)
ridge.cv$lambda.min
ridge.cv$lambda.1se
plot(ridge.cv)
fit.xnew = lm(CreditScore ~ ., data = test)
fit.xnew = model.matrix(fit.xnew)
ridge.prediction1. = predict(ridge.cv, fit.xnew, s = "lambda.1se")
ridge.prediction2. = predict(ridge.cv, fit.xnew, s = "lambda.min")
mse_ridge1 <-  mean((ridge.prediction1. - select(test, CreditScore))^2)
mse_ridge2 <-  mean((ridge.prediction2. - select(test, CreditScore))^2)
mse_ridge1
mse_ridge2
plot(ridge, xvar = 'lambda')
Model_BestSubsetRegression_Cp_1 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Job + Telephone + Foreign, data = train)
Model_BestSubsetRegression_Cp_2 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Disposable + Personal + OtherParties + Age + Plans + Housing + Telephone + Foreign, data = train)
predictions_Model_BestSubsetRegression_Cp_1 <- predict(Model_BestSubsetRegression_Cp_1, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_1 <- mean((predictions_Model_BestSubsetRegression_Cp_1 - select(test, CreditScore))^2)
predictions_Model_BestSubsetRegression_Cp_2 <- predict(Model_BestSubsetRegression_Cp_2, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_2 <- mean((predictions_Model_BestSubsetRegression_Cp_2 - select(test, CreditScore))^2)
mse_Model_BestSubsetRegression_Cp_1
AIC(Model_BestSubsetRegression_Cp_1)
mse_Model_BestSubsetRegression_Cp_2
AIC(Model_BestSubsetRegression_Cp_2)
anova(Model_BestSubsetRegression_Cp_1, Model_BestSubsetRegression_Cp_2)
Model_BestSubsetRegression_Cp_1 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Job + Telephone + Foreign, data = train)
Model_BestSubsetRegression_Cp_2 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Disposable + Personal + OtherParties + Age + Plans + Housing + Telephone + Foreign, data = train)
predictions_Model_BestSubsetRegression_Cp_1 <- predict(Model_BestSubsetRegression_Cp_1, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_1 <- mean((predictions_Model_BestSubsetRegression_Cp_1 - select(test, CreditScore))^2)
predictions_Model_BestSubsetRegression_Cp_2 <- predict(Model_BestSubsetRegression_Cp_2, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_2 <- mean((predictions_Model_BestSubsetRegression_Cp_2 - select(test, CreditScore))^2)
mse_Model_BestSubsetRegression_Cp_1
AIC(Model_BestSubsetRegression_Cp_1)
summary(mse_Model_BestSubsetRegression_Cp_1)
mse_Model_BestSubsetRegression_Cp_2
AIC(Model_BestSubsetRegression_Cp_2)
summary(mse_Model_BestSubsetRegression_Cp_2)
fit.1 = lm(CreditScore ~ ., data = train)
x.1 = model.matrix(fit.1)
x.1
y.1 = select(train, CreditScore)
y.1 = as.matrix(y.1)
ridge = glmnet(x.1, y.1, alpha = 0)
ridge.cv = cv.glmnet(x.1, y.1, alpha = 0)
ridge.cv$lambda.min
ridge.cv$lambda.1se
plot(ridge.cv)
fit.xnew = lm(CreditScore ~ ., data = test)
fit.xnew = model.matrix(fit.xnew)
ridge.prediction1. = predict(ridge.cv, fit.xnew, s = "lambda.1se")
ridge.prediction2. = predict(ridge.cv, fit.xnew, s = "lambda.min")
mse_ridge1 <-  mean((ridge.prediction1. - select(test, CreditScore))^2)
mse_ridge2 <-  mean((ridge.prediction2. - select(test, CreditScore))^2)
mse_ridge1
mse_ridge2
plot(ridge, xvar = 'lambda', main = "Plot of Log Lambda against the coefficients being minimised")
fit.1 = lm(CreditScore ~ ., data = train)
x.1 = model.matrix(fit.1)
y.1 = select(train, CreditScore)
y.1 = as.matrix(y.1)
ridge = glmnet(x.1, y.1, alpha = 0)
ridge.cv = cv.glmnet(x.1, y.1, alpha = 0)
ridge.cv$lambda.min
ridge.cv$lambda.1se
plot(ridge.cv)
fit.xnew = lm(CreditScore ~ ., data = test)
fit.xnew = model.matrix(fit.xnew)
ridge.prediction1. = predict(ridge.cv, fit.xnew, s = "lambda.1se")
ridge.prediction2. = predict(ridge.cv, fit.xnew, s = "lambda.min")
mse_ridge1 <-  mean((ridge.prediction1. - select(test, CreditScore))^2)
mse_ridge2 <-  mean((ridge.prediction2. - select(test, CreditScore))^2)
mse_ridge1
mse_ridge2
plot(ridge, xvar = 'lambda', main = "Plot of Log Lambda against the coefficients being minimised")
predict_data <- predict(Model_Best, newdata = select(test, -CreditScore))
true_data <- select(test,CreditScore)
risk_predict_data <- ifelse(predict_data < 500, 1, 0)
risk_true_data <- ifelse(true_data < 500, 1, 0)
sum(risk_predict_data == risk_true_data)
Model_Best <- lm (CreditScore ~ Status + Duration + Purpose + History + Savings + Personal + Foreign + Plans + OtherParties + Disposable + Amount + Housing + Telephone + Age, data = train)
plot(Model_Best)
influencePlot(Model_Best, main = "Influence Plot")
qqPlot(Model_Best, main = "QQ-Plot")
hist(rstudent(Model_Best))
influenceIndexPlot(Model_Best, id.n = 3)
coef(Model_Best)
library(car)
library(dplyr)
library(ggplot2)
library(leaps)
library(ElemStatLearn)
library(glmnet)
train = read.table("Train.txt",header = T)
test  = read.table("Test.txt",header = T)
train = filter( train, !is.na(Status), !is.na(Duration), !is.na(History), !is.na(Purpose), !is.na(Amount), !is.na(Savings), !is.na(Employment), !is.na(Disposable), !is.na(Personal), !is.na(OtherParties), !is.na(Residence), !is.na(Property), !is.na(Age), !is.na(Plans), !is.na(Housing), !is.na(Existing), !is.na(Job), !is.na(Dependants), !is.na(Telephone), !is.na(Foreign), !is.na(CreditScore))
test = filter( test, !is.na(Status), !is.na(Duration), !is.na(History), !is.na(Purpose), !is.na(Amount), !is.na(Savings), !is.na(Employment), !is.na(Disposable), !is.na(Personal), !is.na(OtherParties), !is.na(Residence), !is.na(Property), !is.na(Age), !is.na(Plans), !is.na(Housing), !is.na(Existing), !is.na(Job), !is.na(Dependants), !is.na(Telephone), !is.na(Foreign), !is.na(CreditScore))
str(train)
str(test)
Model_Best <- lm (CreditScore ~ Status + Duration + Purpose + History + Savings + Personal + Foreign + Plans + OtherParties + Disposable + Amount + Housing + Telephone + Age, data = train)
plot(Model_Best)
influencePlot(Model_Best, main = "Influence Plot")
qqPlot(Model_Best, main = "QQ-Plot")
hist(rstudent(Model_Best))
influenceIndexPlot(Model_Best, id.n = 3)
coef(Model_Best)
Model_Best <- lm (CreditScore ~ Status + Duration + Purpose + History + Savings + Personal + Foreign + Plans + OtherParties + Disposable + Amount + Housing + Telephone + Age, data = train)
plot(Model_Best)
influencePlot(Model_Best, main = "Influence Plot")
qqPlot(Model_Best, main = "QQ-Plot")
hist(rstudent(Model_Best))
influenceIndexPlot(Model_Best, id.n = 3)
coef(Model_Best)
rstandard(Model_Best)
Model_BestSubsetRegression_Cp_1 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Job + Telephone + Foreign, data = train)
Model_BestSubsetRegression_Cp_2 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Disposable + Personal + OtherParties + Age + Plans + Housing + Telephone + Foreign, data = train)
predictions_Model_BestSubsetRegression_Cp_1 <- predict(Model_BestSubsetRegression_Cp_1, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_1 <- mean((predictions_Model_BestSubsetRegression_Cp_1 - select(test, CreditScore))^2)
predictions_Model_BestSubsetRegression_Cp_2 <- predict(Model_BestSubsetRegression_Cp_2, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_2 <- mean((predictions_Model_BestSubsetRegression_Cp_2 - select(test, CreditScore))^2)
mse_Model_BestSubsetRegression_Cp_1
AIC(Model_BestSubsetRegression_Cp_1)
summary(mse_Model_BestSubsetRegression_Cp_1)
mse_Model_BestSubsetRegression_Cp_2
AIC(Model_BestSubsetRegression_Cp_2)
summary(mse_Model_BestSubsetRegression_Cp_2)
Model_BestSubsetRegression_Cp_1 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Job + Telephone + Foreign, data = train)
Model_BestSubsetRegression_Cp_2 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Disposable + Personal + OtherParties + Age + Plans + Housing + Telephone + Foreign, data = train)
predictions_Model_BestSubsetRegression_Cp_1 <- predict(Model_BestSubsetRegression_Cp_1, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_1 <- mean((predictions_Model_BestSubsetRegression_Cp_1 - select(test, CreditScore))^2)
predictions_Model_BestSubsetRegression_Cp_2 <- predict(Model_BestSubsetRegression_Cp_2, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_2 <- mean((predictions_Model_BestSubsetRegression_Cp_2 - select(test, CreditScore))^2)
mse_Model_BestSubsetRegression_Cp_1
AIC(Model_BestSubsetRegression_Cp_1)
summary(mse_Model_BestSubsetRegression_Cp_1)
mse_Model_BestSubsetRegression_Cp_2
AIC(Model_BestSubsetRegression_Cp_2)
summary(mse_Model_BestSubsetRegression_Cp_2)
Model_BestSubsetRegression_Cp_1 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Job + Telephone + Foreign, data = train)
Model_BestSubsetRegression_Cp_2 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Disposable + Personal + OtherParties + Age + Plans + Housing + Telephone + Foreign, data = train)
predictions_Model_BestSubsetRegression_Cp_1 <- predict(Model_BestSubsetRegression_Cp_1, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_1 <- mean((predictions_Model_BestSubsetRegression_Cp_1 - select(test, CreditScore))^2)
predictions_Model_BestSubsetRegression_Cp_2 <- predict(Model_BestSubsetRegression_Cp_2, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_2 <- mean((predictions_Model_BestSubsetRegression_Cp_2 - select(test, CreditScore))^2)
mse_Model_BestSubsetRegression_Cp_1
AIC(Model_BestSubsetRegression_Cp_1)
summary(mse_Model_BestSubsetRegression_Cp_1)
mse_Model_BestSubsetRegression_Cp_2
AIC(Model_BestSubsetRegression_Cp_2)
anova(mse_Model_BestSubsetRegression_Cp_2)
Model_BestSubsetRegression_Cp_1 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Job + Telephone + Foreign, data = train)
Model_BestSubsetRegression_Cp_2 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Disposable + Personal + OtherParties + Age + Plans + Housing + Telephone + Foreign, data = train)
predictions_Model_BestSubsetRegression_Cp_1 <- predict(Model_BestSubsetRegression_Cp_1, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_1 <- mean((predictions_Model_BestSubsetRegression_Cp_1 - select(test, CreditScore))^2)
predictions_Model_BestSubsetRegression_Cp_2 <- predict(Model_BestSubsetRegression_Cp_2, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_2 <- mean((predictions_Model_BestSubsetRegression_Cp_2 - select(test, CreditScore))^2)
mse_Model_BestSubsetRegression_Cp_1
AIC(Model_BestSubsetRegression_Cp_1)
summary(Model_BestSubsetRegression_Cp_1)
mse_Model_BestSubsetRegression_Cp_2
AIC(Model_BestSubsetRegression_Cp_2)
summary(Model_BestSubsetRegression_Cp_2)
Model_BestSubsetRegression_Cp_1 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Job + Telephone + Foreign, data = train)
Model_BestSubsetRegression_Cp_2 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Disposable + Personal + OtherParties + Age + Plans + Housing + Telephone + Foreign, data = train)
predictions_Model_BestSubsetRegression_Cp_1 <- predict(Model_BestSubsetRegression_Cp_1, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_1 <- mean((predictions_Model_BestSubsetRegression_Cp_1 - select(test, CreditScore))^2)
predictions_Model_BestSubsetRegression_Cp_2 <- predict(Model_BestSubsetRegression_Cp_2, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_2 <- mean((predictions_Model_BestSubsetRegression_Cp_2 - select(test, CreditScore))^2)
mse_Model_BestSubsetRegression_Cp_1
AIC(Model_BestSubsetRegression_Cp_1)
anova(Model_BestSubsetRegression_Cp_1)
mse_Model_BestSubsetRegression_Cp_2
AIC(Model_BestSubsetRegression_Cp_2)
summary(Model_BestSubsetRegression_Cp_2)
Model_BestSubsetRegression_Cp_1 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Job + Telephone + Foreign, data = train)
Model_BestSubsetRegression_Cp_2 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Disposable + Personal + OtherParties + Age + Plans + Housing + Telephone + Foreign, data = train)
predictions_Model_BestSubsetRegression_Cp_1 <- predict(Model_BestSubsetRegression_Cp_1, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_1 <- mean((predictions_Model_BestSubsetRegression_Cp_1 - select(test, CreditScore))^2)
predictions_Model_BestSubsetRegression_Cp_2 <- predict(Model_BestSubsetRegression_Cp_2, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_2 <- mean((predictions_Model_BestSubsetRegression_Cp_2 - select(test, CreditScore))^2)
mse_Model_BestSubsetRegression_Cp_1
AIC(Model_BestSubsetRegression_Cp_1)
anova(Model_BestSubsetRegression_Cp_1, Model_Full)
Model_BestSubsetRegression_Cp_1 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Job + Telephone + Foreign, data = train)
Model_BestSubsetRegression_Cp_2 <- lm (CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Disposable + Personal + OtherParties + Age + Plans + Housing + Telephone + Foreign, data = train)
predictions_Model_BestSubsetRegression_Cp_1 <- predict(Model_BestSubsetRegression_Cp_1, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_1 <- mean((predictions_Model_BestSubsetRegression_Cp_1 - select(test, CreditScore))^2)
predictions_Model_BestSubsetRegression_Cp_2 <- predict(Model_BestSubsetRegression_Cp_2, newdata=select(test, -CreditScore))
mse_Model_BestSubsetRegression_Cp_2 <- mean((predictions_Model_BestSubsetRegression_Cp_2 - select(test, CreditScore))^2)
mse_Model_BestSubsetRegression_Cp_1
AIC(Model_BestSubsetRegression_Cp_1)
anova(Model_BestSubsetRegression_Cp_1, Full_Model)
mse_Model_BestSubsetRegression_Cp_2
AIC(Model_BestSubsetRegression_Cp_2)
anova(Model_BestSubsetRegression_Cp_2, Full_Model)
Model_Stepwise <- lm (CreditScore ~ Status + Duration + Purpose + History + Savings + Personal + Foreign + Plans + OtherParties + Disposable + Amount + Housing + Telephone + Age, data = train)
AIC(Model_Stepwise)
anova(Model_Stepwise, Full_Model)
train1 <- train[c(2, 5, 8, 11, 13, 16, 18, 21)]
scatterplotMatrix(train1[,1:8], pch = ".", smoother = FALSE, main = "Pairwise scatterplot of continuous variables with regression line")
#Whilst observing the affect of the CreditScore individually against the variables, from the pairwise scatter plot we can see a obvious strong negative correlation between Duration and again with Amount. There is a weaker correlation when considering Existing and even weaker correlation when looking at Age, albeit both being a positive correlation. Disposable has an even weaker negative correlation to those mentioned so far. Variables named Residence and Dependants have very little correlation that it is not evident through the plot.
Status1 <- factor(train$Status, levels = c("Negative", "None", "Small", "Large"))
History1 <- factor(train$History, levels = c("A", "B", "C", "D", "E"))
Purpose1 <- factor(train$Purpose, levels = c("NewCar", "UsedCar", "Other", "Furniture", "Televison", "Domestic", "Repairs", "Education", "Training", "Business"))
Savings1 <- factor(train$Savings, levels = c("Unknown", "Low", "Medium", "Large", "VeryLarge"))
Employment1 <- factor(train$Employment, levels = c("Unemployed", "Short", "Mdeium", "Long", "VeryLong"))
Personal1 <- factor(train$Personal, levels = c("M:DivSepMar", "F:DivSepMar", "M:Single", "F:Single"))
OtherParties1 <- factor(train$OtherParties, levels = c("None", "Coapp", "Guarantor"))
Property1 <- factor(train$Property, levels = c("House", "Savings", "Car", "None"))
Plans1 <- factor(train$Plans, levels = c("Bank", "Stores", "None"))
Housing1 <- factor(train$Housing, levels = c("Rent", "Own", "RentFree"))
Telephone1 <- factor(train$Telephone, levels = c("Yes", "No"))
Foreign1 <- factor(train$Foreign, levels = c("Yes", "No"))
plot(Status1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Status (Fig 1)", xlab = "Status", ylab = "CreditScore")
#Figure 1 shows that there is some slight positive correlation between CreditScore and Status, particularly if we temporarily ignore 'None'. This implies this factor should be considered in the model.
plot(History1, train$CreditScore, data = train, main = "Boxplot of CreditScore against History (Fig 2)", xlab = "History", ylab = "CreditScore")
#Figure 2 shows that there is positive correlation between CreditScore and History. This implies this factor should be considered in the model.
plot(Purpose1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Purpose (Fig 3)", xlab = "Purpose", ylab = "CreditScore")
#Figure 3 shows that the data is sparsely distributed, but the levels are uncorrelated so we should consider this variable.
plot(Savings1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Savings (Fig 4)", xlab = "Savings", ylab = "CreditScore")
#There is a positive correlation between 'Medium', 'Large', and 'VeryLarge' so these three levels should be considered or some variation of them since there are three distinctive levels.
plot(Employment1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Employment (Fig 5)", xlab = "Employment", ylab = "CreditScore")
#Employement does not appaear to have a significant affect on CreditScore from the boxplot so we will investigate this variable.
plot(Personal1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Personal (Fig 6)", xlab = "Personal", ylab = "CreditScore")
#There are three significant levels in this variable so this entire variable should be considered for the fonal model.
plot(OtherParties1, train$CreditScore, data = train, main = "Boxplot of CreditScore against OtherParties (Fig 7)", xlab = "OtherParties", ylab = "CreditScore")
#OtherParties has very similar levels but the medium are slightly different so this variable will be looked at very carefully.
plot(Property1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Property (Fig 8)", xlab = "Property", ylab = "CreditScore")
#The levels of Property are very similar and so we may be eble to exclude this variable.
plot(Plans1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Plans (Fig 9)", xlab = "Plans", ylab = "CreditScore")
#Plans appears to have a significant affect with levels "Stores' and 'None' so this should be considered in the final model.
plot(Housing1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Housing (Fig 10)", xlab = "Status", ylab = "CreditScore")
#Housing also appears to have a steady affect throught the levels, implying little correlation between the two variables.
plot(train$Job, train$CreditScore, data = train, main = "Boxplot of CreditScore against Job (Fig 11)", xlab = "Job", ylab = "CreditScore")
#Job also does not appear to have an impat on CreditScore and so, we will investigate whether to include this.
plot(Telephone1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Telephone (Fig 12)", xlab = "Telephone", ylab = "CreditScore")
#Telephone does not appear to have a significant impact on CreditScore so we will investigate this.
plot(Foreign1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Foreign (Fig 13)", xlab = "Foreign", ylab = "CreditScore")
#
Model_Best <- lm (CreditScore ~ Status + Duration + Purpose + History + Savings + Personal + Foreign + Plans + OtherParties + Disposable + Amount + Housing + Telephone + Age, data = test)
prediction_Best <- predict(Model_Best, newdata = select(test, - CreditScore))
x.1 = select(test, CreditScore)
x.1 = as.matrix(x.1)
y.1 = as.matrix(prediction_Best)
plot(x.1, y.1, xlab = "Test CreditScore values", ylab = "Predicted CreditScore values", main = "Plot of predicted against true CreditScores values")
abline(0, 1)
Model_Best <- lm (CreditScore ~ Status + Duration + Purpose + History + Savings + Personal + Foreign + Plans + OtherParties + Disposable + Amount + Housing + Telephone + Age, data = train)
plot(Model_Best)
influencePlot(Model_Best, main = "Influence Plot")
qqPlot(Model_Best, main = "QQ-Plot")
hist(rstudent(Model_Best))
influenceIndexPlot(Model_Best, id.n = 3)
rstandard(Model_Best)
sort(coef(Model_Best))
library(car)
library(dplyr)
library(ggplot2)
library(leaps)
library(ElemStatLearn)
library(glmnet)
train = read.table("Train.txt",header = T)
test  = read.table("Test.txt",header = T)
train = filter( train, !is.na(Status), !is.na(Duration), !is.na(History), !is.na(Purpose), !is.na(Amount), !is.na(Savings), !is.na(Employment), !is.na(Disposable), !is.na(Personal), !is.na(OtherParties), !is.na(Residence), !is.na(Property), !is.na(Age), !is.na(Plans), !is.na(Housing), !is.na(Existing), !is.na(Job), !is.na(Dependants), !is.na(Telephone), !is.na(Foreign), !is.na(CreditScore))
test = filter( test, !is.na(Status), !is.na(Duration), !is.na(History), !is.na(Purpose), !is.na(Amount), !is.na(Savings), !is.na(Employment), !is.na(Disposable), !is.na(Personal), !is.na(OtherParties), !is.na(Residence), !is.na(Property), !is.na(Age), !is.na(Plans), !is.na(Housing), !is.na(Existing), !is.na(Job), !is.na(Dependants), !is.na(Telephone), !is.na(Foreign), !is.na(CreditScore))
str(train)
str(test)
train1 <- train[c(2, 5, 8, 11, 13, 16, 18, 21)]
scatterplotMatrix(train1[,1:8], pch = ".", smoother = FALSE, main = "Pairwise scatterplot of continuous variables with regression line")
#Whilst observing the affect of the CreditScore individually against the variables, from the pairwise scatter plot we can see a obvious strong negative correlation between Duration and again with Amount. There is a weaker correlation when considering Existing and even weaker correlation when looking at Age, albeit both being a positive correlation. Disposable has an even weaker negative correlation to those mentioned so far. Variables named Residence and Dependants have very little correlation that it is not evident through the plot.
Status1 <- factor(train$Status, levels = c("Negative", "None", "Small", "Large"))
History1 <- factor(train$History, levels = c("A", "B", "C", "D", "E"))
Purpose1 <- factor(train$Purpose, levels = c("NewCar", "UsedCar", "Other", "Furniture", "Televison", "Domestic", "Repairs", "Education", "Training", "Business"))
Savings1 <- factor(train$Savings, levels = c("Unknown", "Low", "Medium", "Large", "VeryLarge"))
Employment1 <- factor(train$Employment, levels = c("Unemployed", "Short", "Mdeium", "Long", "VeryLong"))
Personal1 <- factor(train$Personal, levels = c("M:DivSepMar", "F:DivSepMar", "M:Single", "F:Single"))
OtherParties1 <- factor(train$OtherParties, levels = c("None", "Coapp", "Guarantor"))
Property1 <- factor(train$Property, levels = c("House", "Savings", "Car", "None"))
Plans1 <- factor(train$Plans, levels = c("Bank", "Stores", "None"))
Housing1 <- factor(train$Housing, levels = c("Rent", "Own", "RentFree"))
Telephone1 <- factor(train$Telephone, levels = c("Yes", "No"))
Foreign1 <- factor(train$Foreign, levels = c("Yes", "No"))
plot(Status1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Status (Fig 1)", xlab = "Status", ylab = "CreditScore")
#Figure 1 shows that there is some slight positive correlation between CreditScore and Status, particularly if we temporarily ignore 'None'. This implies this factor should be considered in the model.
plot(History1, train$CreditScore, data = train, main = "Boxplot of CreditScore against History (Fig 2)", xlab = "History", ylab = "CreditScore")
#Figure 2 shows that there is positive correlation between CreditScore and History. This implies this factor should be considered in the model.
plot(Purpose1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Purpose (Fig 3)", xlab = "Purpose", ylab = "CreditScore")
#Figure 3 shows that the data is sparsely distributed, but the levels are uncorrelated so we should consider this variable.
plot(Savings1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Savings (Fig 4)", xlab = "Savings", ylab = "CreditScore")
#There is a positive correlation between 'Medium', 'Large', and 'VeryLarge' so these three levels should be considered or some variation of them since there are three distinctive levels.
plot(Employment1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Employment (Fig 5)", xlab = "Employment", ylab = "CreditScore")
#Employement does not appaear to have a significant affect on CreditScore from the boxplot so we will investigate this variable.
plot(Personal1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Personal (Fig 6)", xlab = "Personal", ylab = "CreditScore")
#There are three significant levels in this variable so this entire variable should be considered for the fonal model.
plot(OtherParties1, train$CreditScore, data = train, main = "Boxplot of CreditScore against OtherParties (Fig 7)", xlab = "OtherParties", ylab = "CreditScore")
#OtherParties has very similar levels but the medium are slightly different so this variable will be looked at very carefully.
plot(Property1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Property (Fig 8)", xlab = "Property", ylab = "CreditScore")
#The levels of Property are very similar and so we may be eble to exclude this variable.
plot(Plans1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Plans (Fig 9)", xlab = "Plans", ylab = "CreditScore")
#Plans appears to have a significant affect with levels "Stores' and 'None' so this should be considered in the final model.
plot(Housing1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Housing (Fig 10)", xlab = "Status", ylab = "CreditScore")
#Housing also appears to have a steady affect throught the levels, implying little correlation between the two variables.
plot(train$Job, train$CreditScore, data = train, main = "Boxplot of CreditScore against Job (Fig 11)", xlab = "Job", ylab = "CreditScore")
#Job also does not appear to have an impat on CreditScore and so, we will investigate whether to include this.
plot(Telephone1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Telephone (Fig 12)", xlab = "Telephone", ylab = "CreditScore")
#Telephone does not appear to have a significant impact on CreditScore so we will investigate this.
plot(Foreign1, train$CreditScore, data = train, main = "Boxplot of CreditScore against Foreign (Fig 13)", xlab = "Foreign", ylab = "CreditScore")
#Foreign appears to have a significant affect since there is a difference between the levels.
Full_Model <- lm(CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Existing + Job + Dependants + Telephone + Foreign, data = train)
predictions_FULL <- predict(Full_Model, newdata=select(test, -CreditScore))
MSE_Full_Model <- mean((predictions_FULL - select(test, CreditScore))^2)
MSE_Full_Model
AIC(Full_Model)
fit_Full <- lm(CreditScore ~ . , data = train)
fit_step_Full <- step(fit_Full)
fit_Null <- lm(CreditScore ~ 1 , data = train)
fit_step_Null <- step(fit_Null, scope = CreditScore ~ Status + Duration + History + Purpose + Amount + Savings + Employment + Disposable + Personal + OtherParties + Residence + Property + Age + Plans + Housing + Existing + Job + Dependants + Telephone + Foreign)
predictions_Full <- predict(fit_step_Full, newdata=select(test, -CreditScore))
mse_step_Full <- mean((predictions_Full - select(test, CreditScore))^2)
predictions_Null <- predict(fit_step_Null, newdata=select(test, -CreditScore))
mse_step_Null <- mean((predictions_Full - select(test, CreditScore))^2)
mse_step_Full
mse_step_Null
Model_Stepwise <- lm (CreditScore ~ Status + Duration + Purpose + History + Savings + Personal + Foreign + Plans + OtherParties + Disposable + Amount + Housing + Telephone + Age, data = train)
AIC(Model_Stepwise)
anova(Model_Stepwise, Full_Model)
a <- regsubsets(train$CreditScore ~ . , data = train, nvmax = 48)
